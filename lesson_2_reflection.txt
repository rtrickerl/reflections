What happens when you initialize a repository? Why do you need to do it?
  Initializing a repository creates a .git directory for storing meta data. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
  The staging area allows you pick and choose which files to commit aside from those
  which have changes.

How can you use the staging area to make sure you have one commit per logical
change?
  The staging area helps create a buffer between all changed files and those 
  being committed/associated with the current commit notes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
  Branches would really help me when I have major changes to my codebase and a minor 
  bug needs fixed.

How do the diagrams help you visualize the branch structure?
  A diagram allows you to quickly determine the ancestry for the entire repository.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
  The final result merges the changes from branch b into branch a creating a combined node
  where features of branch b are meshed with the latest branch a node. The diagram helps to
  visualize branch ancestry.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
